@page "/reservation-table"
@using lib_blazor.Model
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

<h3>Reservation Table</h3>

@if (Reservations == null)
{
    <p>Loading...</p>
}
else
{
    <div class="container mt-5">
        <div class="table-responsive shadow rounded">
            <table class="table table-hover table-sm">
                <thead class="thead-dark">
                <tr>
                    <th scope="col" class="px-3 py-2 align-middle">#</th>
                    <th scope="col" class="px-3 py-2 align-middle">Username</th>
                    <th scope="col" class="px-3 py-2 align-middle">Book Title</th>
                    <th scope="col" class="px-3 py-2 align-middle">Author</th>
                    <th scope="col" class="px-3 py-2 align-middle">Action</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var reservation in Reservations)
                {
                    <tr class="@(Reservations.IndexOf(reservation) % 2 == 0 ? "" : "bg-light")">
                        <th scope="row" class="px-3 py-2 align-middle">@($"{Reservations.IndexOf(reservation) + 1}")</th>
                        <td class="px-3 py-2 align-middle">@reservation.Username</td>
                        <td class="px-3 py-2 align-middle">
                            <a href="#" class="text-primary">@reservation.BookTitle</a>
                        </td>
                        <td class="px-3 py-2 align-middle">@reservation.Author</td>
                        <td class="px-3 py-2 align-middle">
                            <button @onclick="() => DeleteReservation(reservation.ReservationId)" class="btn btn-danger btn-sm">Delete</button>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
}

@code {
    private List<ReservationDto>? Reservations { get; set; }

    [Inject]
    private HttpClient HttpClient { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Reservations = await HttpClient.GetFromJsonAsync<List<ReservationDto>>("api/reservation");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

    private async Task DeleteReservation(int reservationId)
    {
        var response = await HttpClient.DeleteAsync($"api/reservation/{reservationId}");
        if (response.IsSuccessStatusCode)
        {
            Reservations?.RemoveAll(r => r.ReservationId == reservationId);
        }
        else
        {
            Console.WriteLine($"Failed to delete reservation with ID: {reservationId}. Status code: {response.StatusCode}");
        }
    }

}