@page "/books/{BookId}"
@using lib_blazor.Models
@inject HttpClient Http

<h3>Book Details</h3>

@if (book != null)
{
    <div class="d-flex justify-content-center">
        <div class="card p-4 shadow" style="max-width: 800px;">
            <div class="d-flex justify-content-center mt-3">
                <img src="@book.CoverImageUrl" alt="Book Cover" class="card-img-top" style="max-width: 300px;"/>
            </div>
            <div class="card-body">
                <h5 class="card-title text-center">@book.Title</h5>
                <div class="details">
                    <p class="card-text">
                        <strong>Author:</strong> @book.Author
                    </p>
                    <p class="card-text">
                        <strong>Publisher:</strong> @book.Publisher
                    </p>
                    <p class="card-text">
                        <strong>Language:</strong> @book.Language
                    </p>
                    <p class="card-text">
                        <strong>ISBN:</strong> @book.ISBN
                    </p>
                </div>
                <div class="d-flex justify-content-center mt-3">
                    <button class="btn btn-primary" @onclick="ReserveBook">Reserve</button>
                </div>
            </div>
        </div>
    </div>

    <style>
    .details {
        max-width: 300px;
        margin: 0 auto;
    }
</style>
}
else
{
    <p>Book not found.</p>
}

@code {

    [Parameter]
    public string BookId { get; set; }

    private Book book;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            book = await Http.GetFromJsonAsync<Book>($"api/Book/{BookId}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred: {ex.Message}");
        }
    }

}

@code {

    private async Task ReserveBook()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/reservation/", book.Id);

            if (response.IsSuccessStatusCode)
            {
                Console.WriteLine(await response.Content.ReadAsStringAsync());
            }
            else
            {
                Console.WriteLine("Reservation failed. Please try again later.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred: {ex.Message}");
        }
    }

}